{"version":3,"sources":["components/SocialProfile/SocilaProfile.styled.jsx","components/SocialProfile/SocilaProfile.jsx","components/Statistics/Statistics.styled.jsx","components/Statistics/Statisctics.jsx","components/FriendListItem/FriendListItem.styled.jsx","components/FriendListItem/FriendListItem.jsx","components/FriendList/FriendList.styled.jsx","components/FriendList/FriendList.jsx","components/TransactionHistory/TransactionHistory.styled.jsx","components/TransactionHistory/TransactionHistory.jsx","components/App/App.styled.jsx","components/App/App.jsx","reportWebVitals.js","index.js"],"names":["ProfileContainer","styled","div","DescContainer","Avatar","img","Name","p","Tag","Location","StatsList","ul","StatItem","li","StatLabel","span","StatQuantity","Profile","name","tag","location","avatar","stats","src","alt","followers","views","likes","defaultProps","StatisticSection","section","Title","h2","Stats","Stat","Label","Percentage","Statistics","title","map","id","label","percentage","Friend","Status","props","statusType","FriendListItem","isOnline","width","Friends","FriendList","friends","Table","table","TableHead","thead","TableRow","tr","TransactionHistory","items","type","amount","currency","Container","App","user","statisticalData","transactions","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f8e2243b.chunk.js","sourcesContent":["import styled from '@emotion/styled';\n\nexport const ProfileContainer = styled.div`\n  padding: 16px;\n  margin-right: auto;\n  margin-left: auto;\n  text-align: center;\n  width: 500px;\n  box-shadow: 4px 4px 8px 0 rgba(25, 26, 27, 0.2);\n  border-radius: 20px;\n`;\n\nexport const DescContainer = styled.div`\n  background-color: white;\n  padding: 36px;\n  align-items: center;\n`;\n\nexport const Avatar = styled.img`\n  display: block;\n  border-radius: 50%;\n  width: 200px;\n  margin-right: auto;\n  margin-left: auto;\n`;\n\nexport const Name = styled.p`\n  font-size: 24px;\n  font-weight: 700;\n`;\n\nexport const Tag = styled.p`\n  font-size: 20px;\n  color: grey;\n`;\n\nexport const Location = styled.p`\n  font-size: 20px;\n  color: grey;\n`;\n\nexport const StatsList = styled.ul`\n  padding: 0px;\n  display: flex;\n\n  align-items: center;\n  justify-content: center;\n\n  background-color: #a2bdca;\n  list-style: none;\n  border-bottom-left-radius: 10px;\n  border-bottom-right-radius: 10px;\n  overflow: hidden;\n`;\n\nexport const StatItem = styled.li`\n  display: flex;\n  flex-direction: column;\n  width: 33.33333%;\n  padding: 10px;\n  outline: 1px solid grey;\n  background-color: #a2bdca;\n`;\n\nexport const StatLabel = styled.span`\n  display: block;\n  font-size: 20px;\n  font-weight: 500;\n  color: gray;\n`;\n\nexport const StatQuantity = styled.span`\n  display: block;\n  font-size: 24px;\n  font-weight: 700;\n`;\n","import PropTypes from 'prop-types';\nimport {\n  ProfileContainer,\n  DescContainer,\n  Avatar,\n  Name,\n  Tag,\n  Location,\n  StatsList,\n  StatItem,\n  StatLabel,\n  StatQuantity,\n} from './SocilaProfile.styled';\n\nconst defaultImg = 'https://i.ibb.co/rM8Wh0H/Sasha-Gavrilov.jpg';\n\nexport const Profile = ({ name, tag, location, avatar, stats }) => {\n  return (\n    <ProfileContainer>\n      <DescContainer>\n        <Avatar src={avatar ?? defaultImg} alt=\"Аватар пользователя\" />\n        <Name>{name}</Name>\n        <Tag>{tag}</Tag>\n        <Location>{location}</Location>\n      </DescContainer>\n\n      <StatsList>\n        <StatItem>\n          <StatLabel>Followers</StatLabel>\n          <StatQuantity>{stats.followers}</StatQuantity>\n        </StatItem>\n        <StatItem>\n          <StatLabel>Views</StatLabel>\n          <StatQuantity>{stats.views}</StatQuantity>\n        </StatItem>\n        <StatItem>\n          <StatLabel>Likes</StatLabel>\n          <StatQuantity>{stats.likes}</StatQuantity>\n        </StatItem>\n      </StatsList>\n    </ProfileContainer>\n  );\n};\n\nProfile.defaultProps = {\n  avatar: 'https://i.ibb.co/6b9dSwF/Sasha-Gavrilov.jpg',\n};\n\nProfile.propTypes = {\n  name: PropTypes.string.isRequired,\n\n  tag: PropTypes.string.isRequired,\n  location: PropTypes.string.isRequired,\n  avatar: PropTypes.string.isRequired,\n  stats: PropTypes.exact({\n    followers: PropTypes.number.isRequired,\n    views: PropTypes.number.isRequired,\n    likes: PropTypes.number.isRequired,\n  }),\n};\n","import styled from '@emotion/styled';\n\nexport const StatisticSection = styled.section`\n  text-align: center;\n  border: 1px black solid;\n  box-shadow: 4px 4px 8px 0 rgba(25, 26, 27, 0.2);\n`;\n\nexport const Title = styled.h2`\n  text-transform: uppercase;\n  font-size: 24px;\n  color: grey;\n  margin-bottom: 50px;\n`;\n\nexport const Stats = styled.ul`\n  margin: 0;\n  padding: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  list-style: none;\n`;\n\nexport const Stat = styled.li`\n  width: 20%;\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  border: 1px black solid;\n  padding: 14px;\n  background-color: gray;\n`;\n\nexport const Label = styled.span`\n  font-size: 20px;\n  font-weight: 500px;\n  color: white;\n`;\n\nexport const Percentage = styled.span`\n  font-size: 24px;\n  font-weight: 700px;\n  color: white;\n`;\n","import PropTypes from 'prop-types';\n\nimport {\n  StatisticSection,\n  Title,\n  Stats,\n  Stat,\n  Label,\n  Percentage,\n} from './Statistics.styled';\n\nexport const Statistics = ({ title, stats }) => {\n  return (\n    <StatisticSection>\n      {title && <Title>Upload stats</Title>}\n      <Stats>\n        {stats.map(({ id, label, percentage }) => (\n          <Stat key={id}>\n            <Label>{label}</Label>\n            <Percentage>{percentage}%</Percentage>\n          </Stat>\n        ))}\n      </Stats>\n    </StatisticSection>\n  );\n};\n\nStatistics.propTypes = {\n  title: PropTypes.string,\n  stats: PropTypes.arrayOf(\n    PropTypes.exact({\n      id: PropTypes.string.isRequired,\n      label: PropTypes.string.isRequired,\n      percentage: PropTypes.number.isRequired,\n    }),\n  ),\n};\n","import styled from '@emotion/styled';\nimport { getQueriesForElement } from '@testing-library/dom';\n\nexport const Friend = styled.li`\n  padding: 16px;\n  display: flex;\n  width: 100%;\n  gap: 20px;\n  align-items: center;\n  border-radius: 10px;\n  border: 1px black solid;\n  margin-bottom: 10px;\n`;\n\nexport const Avatar = styled.img`\n  display: block;\n  width: 100px;\n  height: auto;\n`;\n\nexport const Status = styled.span`\n  width: 20px;\n  height: 20px;\n  border-radius: 50px;\n  background-color: ${props => (props.statusType ? `green` : `red`)};\n`;\n\nexport const Name = styled.p`\n  font-size: 24px;\n  font-weight: 700;\n`;\n","import PropTypes from 'prop-types';\n\nimport { Friend, Avatar, Name, Status } from './FriendListItem.styled';\nconst defaultImg = 'https://i.ibb.co/rM8Wh0H/Sasha-Gavrilov.jpg';\n\nexport const FriendListItem = ({ avatar, name, isOnline }) => {\n  return (\n    <Friend>\n      <Status statusType={isOnline}></Status>\n      <Avatar src={avatar ?? defaultImg} alt={name} width=\"48\" />\n      <Name>{name}</Name>\n    </Friend>\n  );\n};\n\nFriendListItem.propTypes = {\n  isOnline: PropTypes.bool.isRequired,\n  avatar: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n};\n","import styled from '@emotion/styled';\n\nexport const Friends = styled.ul`\n  list-style: none;\n  margin: 0;\n  padding: 0;\n  text-align: center;\n`;\n","import PropTypes from 'prop-types';\nimport { FriendListItem } from 'components/FriendListItem/FriendListItem';\n\nimport { Friends } from './FriendList.styled';\n\nexport const FriendList = ({ friends }) => {\n  return (\n    <Friends>\n      {friends.map(({ avatar, name, isOnline, id }) => {\n        return (\n          <FriendListItem\n            avatar={avatar}\n            name={name}\n            key={id}\n            isOnline={isOnline}\n          />\n        );\n      })}\n    </Friends>\n  );\n};\n\nFriendList.propTypes = {\n  friends: PropTypes.arrayOf(\n    PropTypes.exact({\n      avatar: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      id: PropTypes.number.isRequired,\n      isOnline: PropTypes.bool.isRequired,\n    }),\n  ),\n};\n","import styled from '@emotion/styled';\n\nexport const Table = styled.table`\n  text-align: center;\n  font-size: 20px;\n  width: 650px;\n\n  border: 1px gray solid;\n`;\n\nexport const TableHead = styled.thead`\n  background-color: #5bb19e;\n  padding: 10px;\n  color: white;\n  border-radius: 20px;\n\n  th {\n    padding: 10px;\n  }\n`;\n\nexport const TableRow = styled.tr`\n  :nth-child(2n) {\n    background-color: #999999;\n  }\n\n  td {\n    border: 1px black solid;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { Table, TableHead, TableRow } from './TransactionHistory.styled';\n\nexport const TransactionHistory = ({ items }) => {\n  return (\n    <Table>\n      <TableHead>\n        <TableRow>\n          <th>Type</th>\n          <th>Amount</th>\n          <th>Currency</th>\n        </TableRow>\n      </TableHead>\n\n      <tbody>\n        {items.map(({ id, type, amount, currency }) => {\n          return (\n            <TableRow key={id}>\n              <td>{type}</td>\n              <td>{amount}</td>\n              <td>{currency}</td>\n            </TableRow>\n          );\n        })}\n      </tbody>\n    </Table>\n  );\n};\n\nTransactionHistory.propTypes = {\n  friends: PropTypes.arrayOf(\n    PropTypes.exact({\n      id: PropTypes.string.isRequired,\n      type: PropTypes.string.isRequired,\n      amount: PropTypes.number.isRequired,\n      currency: PropTypes.string.isRequired,\n    }),\n  ),\n};\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  padding: 24px;\n  display: grid;\n  grid-template-columns: 500px 500px;\n  grid-gap: 150px;\n  align-items: center;\n  margin-bottom: 20px;\n`;\n","import { Profile } from '../SocialProfile/SocilaProfile';\nimport { Statistics } from '../Statistics/Statisctics';\nimport { FriendList } from '../FriendList/FriendList';\nimport { TransactionHistory } from '../TransactionHistory/TransactionHistory';\n\nimport transactions from '../TransactionHistory/transactions.json';\nimport friends from '../FriendList/friends.json';\nimport user from '../SocialProfile/user.json';\nimport statisticalData from '../Statistics/statistical-data.json';\n\nimport { Container } from './App.styled';\n\nfunction App() {\n  return (\n    <Container>\n      <Profile\n        name={user.name}\n        tag={user.tag}\n        location={user.location}\n        avatar={user.avatar}\n        stats={user.stats}\n      />\n\n      <Statistics title={'Upload stats'} stats={statisticalData} />\n\n      <FriendList friends={friends} />\n\n      <TransactionHistory items={transactions} />\n    </Container>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App.jsx';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\nreportWebVitals();\n"],"sourceRoot":""}